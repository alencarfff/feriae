{"version":3,"sources":["webpack:///./src/components/next-holidays/index.js","webpack:///./src/pages/next-holidays.js"],"names":["NextHolidays","state","holidays","months","renderRow","holiday","key","date","formatDateToCursive","localName","split","formatSringToBR","componentDidMount","a","this","length","api","get","response","setState","data","render","className","map","Component","NextHolidaysPage","title"],"mappings":"yYAKqBA,E,6PACjBC,MAAQ,CACJC,SAAU,GACVC,OAAQ,CACJ,UACA,YACA,QACA,QACA,OACA,QACA,QACA,SACA,WACA,UACA,WACA,a,EA0BRC,UAAY,SAACC,GAAD,OACR,wBAAIC,IAAKD,EAAQE,MACb,4BAAK,EAAKC,oBAAoBH,EAAQE,OACtC,2BAAIF,EAAQI,a,EAIpBD,oBAAsB,SAACD,GAAU,IACrBJ,EAAW,EAAKF,MAAhBE,OAGR,QADAI,EAAOA,EAAKG,MAAM,MACF,GAAhB,OAAyBP,GAAQI,EAAK,GAAK,GAA3C,SAAqDA,EAAK,I,EAG9DI,gBAAkB,SAACJ,GAEf,OADAA,EAAOA,EAAKG,MAAM,MACH,GAAf,IAAqBH,EAAK,GAA1B,IAAgCA,EAAK,I,6BAtCnCK,kB,gCAAN,4BAAAC,EAAA,2DACyBC,KAAKb,MAAlBC,SAEKa,OAAS,GAH1B,iEAK2BC,IAAIC,IAAI,yBALnC,OAKUC,EALV,OAOIJ,KAAKK,UAAS,iBAAO,CAAEjB,SAAUgB,EAASE,SAP9C,+C,sOASAC,OAAA,WAAU,IACEnB,EAAaY,KAAKb,MAAlBC,SAER,OAAwB,IAApBA,EAASa,OAAsB,kBAAC,IAAD,MAG/B,yBAAKO,UAAU,iBACX,wBAAIA,UAAU,SAAd,qBACA,wBAAIA,UAAU,gBAAgBpB,EAASqB,IAAIT,KAAKV,c,GApCtBoB,aCM3BC,UANU,kBACrB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKC,MAAM,sBACX,kBAAC,EAAD,S","file":"component---src-pages-next-holidays-js-518c65739467dc357c66.js","sourcesContent":["import React, { Component } from 'react';\nimport api from '../../services/api';\nimport './style.scss';\nimport Spinner from '../spinner/index';\n\nexport default class NextHolidays extends Component {\n    state = { \n        holidays: [],\n        months: [\n            'Janeiro', \n            'Fevereiro', \n            'Março', \n            'Abril', \n            'Maio', \n            'Junho', \n            'Julho', \n            'Agosto', \n            'Setembro', \n            'Outubro', \n            'Novembro', \n            'Dezembro'\n        ]\n     }\n\n    async componentDidMount(){\n        const { holidays } = this.state;\n\n        if( holidays.length > 0 ) return;\n\n        const response = await api.get(\"NextPublicHolidays/BR\");\n\n        this.setState(() => ({ holidays: response.data }))\n    }\n    render() {\n        const { holidays } = this.state;\n\n        if( holidays.length === 0 ) return <Spinner></Spinner>;\n\n        return (\n            <div className=\"next-holidays\">\n                <h2 className=\"title\">Próximos feriados</h2>\n                <ul className=\"holiday-list\">{holidays.map(this.renderRow)}</ul>\n            </div>\n        );\n    }\n\n    renderRow = (holiday) => (\n        <li key={holiday.date}>\n            <h3>{this.formatDateToCursive(holiday.date)}</h3>\n            <p>{holiday.localName}</p>\n        </li>      \n    );\n\n    formatDateToCursive = (date) => {\n        const { months } = this.state;\n\n        date = date.split('-');\n        return `${+date[2]} de ${months[+date[1] - 1]} de ${+date[0]}`\n    }\n\n    formatSringToBR = (date) => {\n        date = date.split('-');\n        return `${date[2]}/${date[1]}/${date[0]}`;\n    }\n}","import React from 'react';\nimport Layout from '../components/layout/layout';\nimport SEO from '../components/seo';\nimport NextHolidays from '../components/next-holidays'\n\nconst NextHolidaysPage = () => (\n    <Layout>\n        <SEO title=\"Próximos feriados\" />\n        <NextHolidays></NextHolidays>\n    </Layout>\n);\nexport default NextHolidaysPage;"],"sourceRoot":""}